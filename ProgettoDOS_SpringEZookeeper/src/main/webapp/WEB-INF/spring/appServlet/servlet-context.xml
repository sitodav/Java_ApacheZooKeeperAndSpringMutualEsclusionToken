<?xml version="1.0" encoding="UTF-8"?>

<!-- QUESTO FILE E' UTILIZZATO COME CONFIGURAZIONE DEL CONTESTO DELLA WEB APPLICATION -->
<!-- la configurazione del contesto di spring (e trattandosi di una web application di spring mvc in questo caso)
può avvenire sia in questo file tramite tag xml sia utilizzando le @annotations introdotte in spring 3.0 -->

<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	


	<!-- bypassiamo la logica dei controller mvc per le risorse statiche -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Questo tag ci permette di utilizzare le annotation relative a spring mvc direttamente nel codice java
	per dichiarare elementi quali ad esempio i controller-->
	<annotation-driven />
	
	<!-- questo ci permette di evitare di dichiarare in questo file xml alcuni bean factory / bean post processor di supporto alle annotazioni usate in java -->
	<context:annotation-config/> <!-- come ad esempio per le annotazioni @required etc... -->
	
	<!-- questo ci permette di dichiarare bean direttamente con le annotazioni nel codice java, senza passare per questo file xml
	a patto quindi di far si che il contesto della web application conosca i packages interessati -->
	<context:component-scan base-package="zookeeper.utils, beans, controllers, wrapper.strutture.sincronizzate ,database_beans, annotazionicustom" />
	

	<!-- dichiariamo un bean di classe InternalResourceViewResolver che svolge la funzione di View Resolver-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- dichiaro property placeholderconfigurer per poter leggere le proprietà presenti nei file.properties locali -->
	<beans:bean id="propertyPlaceholderConfigurer" class ="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location" value="classpath:configurazioneLocale.properties"/> 
	</beans:bean>
	
	
	
	
	
	
	
	
	
</beans:beans>
